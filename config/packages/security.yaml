security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    role_hierarchy:
        ROLE_USER:       ROLE_USER
        ROLE_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: in_database

            form_login:
                login_path: login
                check_path: login
                default_target_path : login
                
            access_denied_url : login

            logout:
                path: logout
                target: index

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: /admin/add, roles: ROLE_USER }
        - { path: /admin/edit, roles: ROLE_USER }
        - { path: /admin/edit1, roles: ROLE_USER }
        - { path: /admin/manage, roles: ROLE_ADMIN }

        # - { path: ^/profile, roles: ROLE_USER }
